@import "variables";
@import "mixin";

.copy-btn {
  position: absolute;
  z-index: 995;
  right: 0;

  & button {
    height: 26px;
    color: $white-color;
    background-color: $dark-blue;
    padding: 5px 7px;
    border: 1px solid #a7a7a7;
    border-radius: 4px !important;
    margin: 6px;
    font-size: 6pt;
  }
}

.form-control {
  color: $input-color;
  background-color: $input-background;
  border: $card-border;

  &:focus {
    color: $text-color;
    background-color: lighten($input-background, 4%) !important;
    border: 1px solid $dark-blue;
  }
}

.form-control[readonly] {
  color: lighten($input-color, 30%) !important;
  background-color: lighten($background-color, 12%) !important;
}

/* The slider itself */
.slider {
  height: 5px; /* Specified height */
  width: 100%; /* Full-width */
  outline: none; /* Remove outline */
  -webkit-appearance: none; /* Override default CSS styles */
  appearance: none;
  background: $midnight-color; /* Grey background */
  -webkit-transition: 0.2s; /* 0.2 seconds transition on hover */
  transition: opacity 0.2s;
}

/* Mouse-over effects */
.slider:hover {
  opacity: 1; /* Fully shown on mouse-over */
}

/* The slider handle (use -webkit- (Chrome, Opera, Safari, Edge) and -moz- (Firefox) to override default look) */
.slider::-webkit-slider-thumb {
  height: 20px; /* Slider handle height */
  width: 20px; /* Set a specific slider handle width */
  border-radius: 50%;
  -webkit-appearance: none; /* Override default look */
  appearance: none;
  background: $white-color; /* Green background */
  cursor: pointer; /* Cursor on hover */
}

.slider::-moz-range-thumb {
  height: 15px; /* Slider handle height */
  width: 15px; /* Set a specific slider handle width */
  background: $white-color; /* Green background */
  cursor: pointer; /* Cursor on hover */
}

.input-group-text {
  background-color: $container-color;
  border: $card-border;
  border-radius: 0.25rem;
}

.inputTags-field {
  background-color: transparent;
  padding-top: 0.13rem;
  border: 0;
}

input.inputTags-field:focus {
  outline-width: 0;
}

.inputTags-list {
  display: block;
  min-height: calc(2.25rem + 2px);
  width: 100%;
  color: #495057;
  background-color: orange;
  font-weight: 400;
  padding: 0.2rem 0.35rem;
  border: 1px solid #ced4da;
  border-radius: 0.25rem;
  background-clip: padding-box;
  font-size: 1rem;
  line-height: 1.5;
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
}

.inputTags-item {
  color: white;
  background-color: teal;
  padding: 5px 8px;
  border-radius: 4px;
  margin-right: 5px;
  font-size: 10pt;

  & .close-item {
    font-weight: bold;
    margin-left: 6px;
    cursor: pointer;
    font-size: 13pt;
  }
}

.switch {
  position: relative;
  font-size: 1rem;

  & input {
    position: absolute;
    height: 1px;
    width: 1px;
    padding: 0;
    border: 0;
    background: none;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    overflow: hidden;

    & + label {
      position: relative;
      display: inline-block;
      height: calc(2.375rem * 0.8);
      min-width: calc(calc(2.375rem * 0.8) * 2);
      border-radius: calc(2.375rem * 0.8);
      outline: none;
      cursor: pointer;
      line-height: calc(2.375rem * 0.8);
      text-indent: calc(calc(calc(2.375rem * 0.8) * 2) + 0.5rem);
      user-select: none;
      vertical-align: middle;

      &::before,
      &::after {
        position: absolute;
        display: block;
        width: calc(calc(2.375rem * 0.8) * 2);
        bottom: 0;
        content: "";
        left: 0;
        top: 0;
      }

      &::before {
        background-color: $midnight-color;
        border: $card-border;
        border-radius: calc(2.375rem * 0.8);
        right: 0;
        transition: 0.2s all;
      }

      &::after {
        height: calc(calc(2.375rem * 0.8) - calc(2px * 2));
        width: calc(calc(2.375rem * 0.8) - calc(2px * 2));
        background-color: $white-color;
        border-radius: 50%;
        left: 2px;
        top: 2px;
        transition: 0.2s all;
      }
    }
  }
}

.switch-rd-gr input:checked + label::before {
  background-color: orange !important;
}

.switch input:checked + label::before {
  background-color: $dark-blue !important;
}

.switch input:checked + label::after {
  margin-left: calc(2.375rem * 0.8);
}

.switch input:focus + label::before {
  outline: none;
}

.switch input:disabled + label {
  color: darkgray;
  cursor: not-allowed;

  &::before {
    background-color: black;
  }
}

.switch.switch-sm {
  font-size: 0.875rem;

  & input + label {
    height: calc(1.9375rem * 0.8);
    min-width: calc(calc(1.9375rem * 0.8) * 2);
    line-height: calc(1.9375rem * 0.8);
    text-indent: calc(calc(calc(1.9375rem * 0.8) * 2) + 0.5rem);

    &::before {
      width: calc(calc(1.9375rem * 0.8) * 2);
    }

    &::after {
      height: calc(calc(1.9375rem * 0.8) - calc(2px * 2));
      width: calc(calc(1.9375rem * 0.8) - calc(2px * 2));
    }
  }

  & input:checked + label::after {
    margin-left: calc(1.9375rem * 0.8);
  }
}

.switch.switch-lg {
  font-size: 1.25rem;

  & input + label {
    height: calc(3rem * 0.8);
    min-width: calc(calc(3rem * 0.8) * 2);
    line-height: calc(3rem * 0.8);
    text-indent: calc(calc(calc(3rem * 0.8) * 2) + 0.5rem);

    &::before {
      width: calc(calc(3rem * 0.8) * 2);
    }

    &::after {
      height: calc(calc(3rem * 0.8) - calc(2px * 2));
      width: calc(calc(3rem * 0.8) - calc(2px * 2));
    }
  }

  & input:checked + label::after {
    margin-left: calc(3rem * 0.8);
  }
}

.switch + .switch {
  margin-left: 1rem;
}

.CodeMirror {
  position: relative;
  display: block;
  height: 80vh;
  width: 100%;
  color: $white-color;
  background-color: $midnight-color;

  /* Code Mirror Settings */
  font-family: monospace;
  padding: 0;

  /* Bootstrap Settings */
  box-sizing: border-box;
  border: 1px solid #ccc;
  border-radius: 4px;
  margin: 0;
  background-image: none;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);
  font: inherit;
  font-size: 14px;
  line-height: 1.5;
  overflow: auto;
  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
}

.CodeMirror-focused {
  outline: 0;
  /* Bootstrap Settings */
  border-color: #66afe9;
  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),
    0 0 8px rgba(102, 175, 233, 0.6);
  transition: border-color ease-in-out 0.15s, box-shadow ease-in-out 0.15s;
}

.nav-pills .nav-link.active,
.nav-pills .show > .nav-link {
  background-color: $nav-tab-color;
  border: 1px solid #007bff !important;
}

.nav-pills a {
  color: $text-color;
}

.nav-link.active a:hover {
  color: $white-color !important;
}

.nav-pills i {
  margin-right: 10px;
}

.form-control[readonly] {
  color: $text-color !important;
  background-color: $midnight-color !important;
  border: 1px solid $minor-border !important;
}

.drag_icon {
  display: inline-block;
  height: 25px;
  width: 25px;
  color: #b1b1b1;
  margin-right: 5px;
  margin-left: -10px;
  cursor: move; /* fallback if grab cursor is unsupported */
  cursor: grab;
  cursor: -moz-grab;
  cursor: -webkit-grab;
  text-align: center;
}

/* (Optional) Apply a "closed-hand" cursor during drag operation. */
.drag_icon:active {
  cursor: grabbing;
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
}

col.d-none.d-md-table-cell {
  background-color: $input-prefilled !important;
}
